"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _isArray = _interopRequireDefault(require("@antv/util/lib/is-array"));

var _isFunction = _interopRequireDefault(require("@antv/util/lib/is-function"));

var _isString = _interopRequireDefault(require("@antv/util/lib/is-string"));

var _groupBy = _interopRequireDefault(require("@antv/util/lib/group-by"));

var _simpleSortBy = _interopRequireDefault(require("./simple-sort-by"));

// from g2-dataSte

/** 数据分片
 * @param {any[]} rows
 * @param {(string | string[] | ((item: any) => string))} group_by
 * @param {(string | string[] | ((item: any) => number))} [order_by=[]]
 * @returns {Record<string, any[]>}
 */
function partition(rows, group_by) {
  var order_by = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var newRows = rows;

  if (order_by && order_by.length) {
    newRows = (0, _simpleSortBy["default"])(rows, order_by);
  }

  var groupingFn;

  if ((0, _isFunction["default"])(group_by)) {
    groupingFn = group_by;
  } else if ((0, _isArray["default"])(group_by)) {
    groupingFn = function groupingFn(row) {
      return "_".concat(group_by.map(function (col) {
        return row[col];
      }).join('-'));
    }; // NOTE: Object.keys({'b': 'b', '2': '2', '1': '1', 'a': 'a'}) => [ '1', '2', 'b', 'a' ]
    // that is why we have to add a prefix

  } else if ((0, _isString["default"])(group_by)) {
    groupingFn = function groupingFn(row) {
      return "_".concat(row[group_by]);
    };
  }

  var groups = (0, _groupBy["default"])(newRows, groupingFn);
  return groups;
}

;
var _default = partition;
exports["default"] = _default;