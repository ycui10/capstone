"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Chart = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _debounce2 = _interopRequireDefault(require("@antv/util/lib/debounce"));

var _dom = require("@antv/g2/lib/util/dom");

var _resizeObserverPolyfill = _interopRequireDefault(require("resize-observer-polyfill"));

var _ErrorBoundary = _interopRequireDefault(require("../../boundary/ErrorBoundary"));

var _withContainer = _interopRequireDefault(require("../../boundary/withContainer"));

var _root = _interopRequireDefault(require("../../context/root"));

var _view = _interopRequireDefault(require("../../context/view"));

var _group = _interopRequireDefault(require("../../context/group"));

var _chartHelper = _interopRequireDefault(require("./chartHelper"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Chart = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Chart, _React$Component);

  var _super = _createSuper(Chart);

  function Chart(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Chart);
    _this = _super.call(this, props);
    _this.isRootView = true;
    _this.resize = (0, _debounce2["default"])(function () {
      var chart = _this.chartHelper.chart;

      if (_this.props.autoFit && _this.chartHelper.chart) {
        var _getChartSize = (0, _dom.getChartSize)(_this.props.container, _this.props.autoFit, chart.width, chart.height),
            width = _getChartSize.width,
            height = _getChartSize.height;

        if (chart.width !== width || chart.height !== height) {
          chart.changeSize(width, height);
          chart.emit('resize');
        }
      }
    }, 300); // 监听容器发生resize

    _this.resizeObserver = new _resizeObserverPolyfill["default"](_this.resize);

    _this.resizeObserver.observe(props.container);

    _this.chartHelper = new _chartHelper["default"]();
    return _this;
  }

  (0, _createClass2["default"])(Chart, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.chartHelper.render();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      // 更新图表大小
      var _this$props = this.props,
          width = _this$props.width,
          height = _this$props.height,
          autoFit = _this$props.autoFit,
          forceFit = _this$props.forceFit; // 已经自适应就不更新大小了

      if (!(autoFit || forceFit) && this.chartHelper.chart) {
        if (width >= 0 && width !== this.chartHelper.chart.width || height >= 0 && height !== this.chartHelper.chart.height) {
          var nextWidth = width || this.chartHelper.chart.width;
          var nextHeight = height || this.chartHelper.chart.height; // changeSize方法内部有调用render, 自动更新无需

          this.chartHelper.chart.changeSize(nextWidth, nextHeight);
          this.chartHelper.chart.emit('resize');
        } else {
          this.chartHelper.render();
        }
      } else {
        this.chartHelper.render();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.chartHelper.destory();
      this.resizeObserver.unobserve(this.props.container);
    } // 外部通过ref调用获取实例

  }, {
    key: "getG2Instance",
    value: function getG2Instance() {
      return this.chartHelper.chart;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          placeholder = _this$props2.placeholder,
          data = _this$props2.data,
          errorContent = _this$props2.errorContent;

      if ((data === undefined || data.length === 0) && placeholder) {
        this.chartHelper.destory();
        var pl = placeholder === true ? /*#__PURE__*/_react["default"].createElement("div", {
          style: {
            position: 'relative',
            top: '48%',
            color: '#aaa',
            textAlign: 'center'
          }
        }, "\u6682\u65E0\u6570\u636E") : placeholder;
        return /*#__PURE__*/_react["default"].createElement(_ErrorBoundary["default"], {
          errorContent: errorContent
        }, pl);
      }

      this.chartHelper.update(this.props);
      return /*#__PURE__*/_react["default"].createElement(_ErrorBoundary["default"], {
        errorContent: errorContent,
        key: this.chartHelper.key
      }, /*#__PURE__*/_react["default"].createElement(_root["default"].Provider, {
        value: this.chartHelper
      }, /*#__PURE__*/_react["default"].createElement(_view["default"].Provider, {
        value: this.chartHelper.chart
      }, /*#__PURE__*/_react["default"].createElement(_group["default"].Provider, {
        value: this.chartHelper.extendGroup
      }, this.props.children))));
    }
  }]);
  return Chart;
}(_react["default"].Component);

exports.Chart = Chart;
Chart.defaultProps = {
  placeholder: false,
  visible: true,
  interactions: [],
  filter: []
};

var _default = (0, _withContainer["default"])(Chart);

exports["default"] = _default;