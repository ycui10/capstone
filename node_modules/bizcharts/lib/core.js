"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  VERSION: true
};
exports.VERSION = void 0;

var CanvasEngine = _interopRequireWildcard(require("@antv/g-canvas"));

var SVGEngine = _interopRequireWildcard(require("@antv/g-svg"));

var _core = require("@antv/g2/lib/core");

Object.keys(_core).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _core[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _core[key];
    }
  });
});

require("./animations");

var _theme = require("./theme");

Object.keys(_theme).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _theme[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _theme[key];
    }
  });
});
// 注册 G 渲染引擎
// 动画
// 主题
(0, _core.registerEngine)('canvas', CanvasEngine);
(0, _core.registerEngine)('svg', SVGEngine);
var VERSION = '4.0.17'; // fixme: supportCSSTransform 在g2@4.1.0 后支持
// 原始的计算坐标方法

exports.VERSION = VERSION;
var rawGetPointByClient = CanvasEngine.Canvas.prototype.getPointByClient;

CanvasEngine.Canvas.prototype.getPointByClient = function (clientX, clientY) {
  // 获取原函数返回的坐标值
  var raw = rawGetPointByClient.call(this, clientX, clientY); // 获取设定高宽和真实高宽。
  // 当设定的高宽不等于getBoundingClientRect获取的高宽时，说明存在缩放。

  var el = this.get('el');
  var bbox = el.getBoundingClientRect();
  var setWidth = this.get('width');
  var setHeight = this.get('height');
  var realWidth = bbox.width,
      realHeight = bbox.height; // 除以缩放比（真实高宽 / 设定高宽）获得真实的坐标。

  return {
    x: raw.x / (realWidth / setWidth),
    y: raw.y / (realHeight / setHeight)
  };
};