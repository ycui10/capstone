"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _react = _interopRequireDefault(require("react"));

var _isString2 = _interopRequireDefault(require("@antv/util/lib/is-string"));

var _isFunction2 = _interopRequireDefault(require("@antv/util/lib/is-function"));

var _base = _interopRequireDefault(require("@antv/g2/lib/geometry/label/base"));

var _view = _interopRequireDefault(require("../context/view"));

var _core = require("../core");

var _compareProps = _interopRequireDefault(require("../utils/compareProps"));

var _warning = _interopRequireDefault(require("../utils/warning"));

require("./Label");

require("./actions");

var _cloneDeep = _interopRequireDefault(require("../utils/cloneDeep"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

(0, _core.registerGeometryLabel)('base', _base["default"]);

var GeomHelper = /*#__PURE__*/function () {
  function GeomHelper() {
    (0, _classCallCheck2["default"])(this, GeomHelper);
    this.config = {};
  }

  (0, _createClass2["default"])(GeomHelper, [{
    key: "setView",
    value: function setView(view) {
      this.view = view;
      this.rootChart = view.rootChart || view; // 顶层chart实例
    }
  }, {
    key: "createGeomInstance",
    value: function createGeomInstance(GemoBaseClassName) {
      this.geom = this.view[GemoBaseClassName]();
      this.GemoBaseClassName = GemoBaseClassName;
    }
  }, {
    key: "update",
    value: function update(newConfig, component) {
      var _this = this;

      if (!this.geom) {
        this.setView(component.context);
        this.createGeomInstance(component.GemoBaseClassName);
        this.interactionTypes = component.interactionTypes;
      }

      (0, _compareProps["default"])(this.config, newConfig, ['position', 'shape', 'color', 'label', 'style', 'tooltip', 'size', 'animate', 'state'], function (value, key) {
        var _this$geom;

        // value 已被转为array
        (0, _warning["default"])(!(key === 'label' && value[0] === true), 'label 值类型错误，应为false | LabelOption | FieldString');

        (_this$geom = _this.geom)[key].apply(_this$geom, (0, _toConsumableArray2["default"])(value));
      });
      (0, _compareProps["default"])(this.config, newConfig, ['adjust'], function (value, key) {
        if ((0, _isString2["default"])(value[0])) {
          _this.geom[key](value[0]);
        } else {
          _this.geom[key](value);
        }
      }); // 状态设置

      this.geom.state(newConfig.state || {}); // selected 和 active 使用 interacttion 替代
      // setElements 设置 selected 和 active 默认值

      this.rootChart.on('processElemens', function () {
        if ((0, _isFunction2["default"])(newConfig.setElements)) {
          newConfig.setElements(_this.geom.elements);
        }
      }); // 交互
      // interaction 

      (0, _compareProps["default"])(this.config, newConfig, this.interactionTypes, function (value, key) {
        if (value[0]) {
          _this.rootChart.interaction(key);
        } else {
          _this.rootChart.removeInteraction(key);
        }
      }); // 缓存

      this.config = (0, _cloneDeep["default"])(newConfig);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.geom) {
        this.geom.destroy();
        this.geom = null;
      }

      this.config = {};
    }
  }]);
  return GeomHelper;
}();

var BaseGeom = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(BaseGeom, _React$Component);

  var _super = _createSuper(BaseGeom);

  function BaseGeom(props) {
    var _this2;

    (0, _classCallCheck2["default"])(this, BaseGeom);
    _this2 = _super.call(this, props);
    _this2.interactionTypes = [];
    _this2.geomHelper = new GeomHelper();
    return _this2;
  }

  (0, _createClass2["default"])(BaseGeom, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.geomHelper.destroy();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      this.geomHelper.update(this.props, this);
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, _react["default"].Children.map(this.props.children, function (ele) {
        return /*#__PURE__*/_react["default"].isValidElement(ele) ? /*#__PURE__*/_react["default"].cloneElement(ele, {
          parentInstance: _this3.geomHelper.geom
        }) : null;
      }));
    }
  }]);
  return BaseGeom;
}(_react["default"].Component);

BaseGeom.contextType = _view["default"];
var _default = BaseGeom;
exports["default"] = _default;