"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _object = _interopRequireDefault(require("object.assign"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _annotation = _interopRequireDefault(require("@antv/g2/lib/chart/controller/annotation"));

var _ = _interopRequireWildcard(require("@antv/util"));

var _view = _interopRequireDefault(require("../../context/view"));

var _core = require("../../core");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

(0, _core.registerComponentController)('annotation', _annotation["default"]); // 4.0之后称为Annotation，为了名字统一

var Annotation = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Annotation, _React$Component);

  var _super = _createSuper(Annotation);

  function Annotation() {
    var _this;

    (0, _classCallCheck2["default"])(this, Annotation);
    _this = _super.apply(this, arguments);
    _this.annotationType = 'line'; // 默认为line类型的guide

    return _this;
  }

  (0, _createClass2["default"])(Annotation, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var chartIns = this.getChartIns();
      this.id = _.uniqueId('annotation');
      this.annotation = chartIns.annotation();
      this.annotation[this.annotationType](this.props);
      this.annotation.option[this.annotation.option.length - 1].__id = this.id;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this2 = this;

      var index = null;
      this.annotation.option.forEach(function (item, i) {
        if (item.__id === _this2.id) {
          index = i;
        }
      });
      this.annotation.option[index] = (0, _object["default"])((0, _object["default"])({
        type: this.annotationType
      }, this.props), {
        __id: this.id
      }); // fixme: 需要判断view的情况

      this.getChartIns().render();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this3 = this;

      var index = null;

      if (!this.annotation) {
        return;
      }

      this.annotation.option.forEach(function (item, i) {
        if (item.__id === _this3.id) {
          index = i;
        }
      });

      if (index !== null) {
        this.annotation.option.splice(index, 1);
      }

      this.annotation = null;
    }
  }, {
    key: "getChartIns",
    value: function getChartIns() {
      return this.context;
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);
  return Annotation;
}(_react["default"].Component);

Annotation.contextType = _view["default"];
var _default2 = Annotation;
exports["default"] = _default2;