"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _object = _interopRequireDefault(require("object.assign"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _get2 = _interopRequireDefault(require("@antv/util/lib/get"));

var _modifyCss2 = _interopRequireDefault(require("@antv/dom-util/lib/modify-css"));

var _view = require("../../context/view");

var _core = require("../../core");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var CONTAINER_CLASS = 'g2-tooltip';

var Tooltip = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Tooltip, _React$Component);

  var _super = _createSuper(Tooltip);

  function Tooltip() {
    var _this;

    (0, _classCallCheck2["default"])(this, Tooltip);
    _this = _super.apply(this, arguments);

    _this.renderInnder = function (_ref) {
      var title = _ref.title,
          items = _ref.items,
          x = _ref.x,
          y = _ref.y;

      // 当数据变化的时候渲染, todo: 新建fiber根节点，和react虚拟dom的性能对比报告
      _reactDom["default"].render(_this.props.children(title, items, x, y), _this.getElement());
    };

    return _this;
  }

  (0, _createClass2["default"])(Tooltip, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var chartView = this.props.chartView;

      if (this.element) {
        this.element.remove();
      }

      chartView.getController('tooltip').clear();
      chartView.off('tooltip:change', this.renderInnder);
    }
  }, {
    key: "getElement",
    value: function getElement() {
      if (!this.element) {
        this.element = document.createElement('div');
        this.element.classList.add('bizcharts-tooltip');
        this.element.classList.add('g2-tooltip');
        this.element.style.width = 'auto';
        this.element.style.height = 'auto';
      }

      return this.element;
    }
  }, {
    key: "overwriteCfg",
    value: function overwriteCfg() {
      var _this2 = this;

      var _a = this.props,
          chartView = _a.chartView,
          children = _a.children,
          _a$domStyles = _a.domStyles,
          domStyles = _a$domStyles === void 0 ? {} : _a$domStyles,
          config = __rest(_a, ["chartView", "children", "domStyles"]);

      chartView.tooltip((0, _object["default"])((0, _object["default"])({
        inPlot: false,
        domStyles: domStyles
      }, config), {
        // 坐标移动即渲染
        customContent: function customContent() {
          return _this2.getElement();
        }
      }));
      chartView.on('tooltip:change', this.renderInnder); // fixme: 主题要去图表主题，要meger domStyle。

      var domStylesTheme = (0, _get2["default"])((0, _core.getTheme)(), ['components', 'tooltip', 'domStyles', CONTAINER_CLASS], {});
      (0, _modifyCss2["default"])(this.element, (0, _object["default"])((0, _object["default"])({}, domStylesTheme), domStyles[CONTAINER_CLASS]));
    }
  }, {
    key: "render",
    value: function render() {
      this.overwriteCfg();
      return null; // 无子组件
    }
  }]);
  return Tooltip;
}(_react["default"].Component);

var _default2 = (0, _view.withView)(Tooltip);

exports["default"] = _default2;