{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../src/combo/util/interface.ts"],"names":[],"mappings":"","sourcesContent":["import { IValueAxis, TextStyle, GraphicStyle, LineStyle } from '../../interface/config';\nimport { PointShape } from '../../plots/line/layer';\nimport { DataItem } from '../../interface/config';\nimport { IDescription, ITitle, Meta } from '../../interface/config';\nimport { LooseMap } from '../../interface/types';\n\nexport interface ComboViewConfig {\n  title?: ITitle;\n  description?: IDescription;\n  data: DataItem[][];\n  meta?: LooseMap<Meta>;\n  xField: string;\n  yField: string[];\n  yAxis?: ComboYAxis;\n  legend?: ComboLegendConfig;\n  events?: {\n    [k: string]: ((...args: any[]) => any) | boolean;\n  };\n}\n\nexport interface ComboYAxisConfig extends IValueAxis {\n  colorMapping?: boolean;\n}\n\nexport interface ComboYAxis {\n  max?: number;\n  min?: number;\n  tickCount?: number;\n  leftConfig?: ComboYAxisConfig;\n  rightConfig?: ComboYAxisConfig;\n}\n\nexport interface ComboLegendConfig {\n  visible?: boolean;\n  marker?: {\n    symbol?: string;\n    style?: any;\n  };\n  text?: {\n    style?: TextStyle;\n    formatter?: (value: string) => string;\n  };\n}\n\nexport interface LineConfig {\n  color?: string | string[];\n  lineSize?: number;\n  smooth?: boolean;\n  connectNull?: boolean;\n  point?: {\n    visible?: boolean;\n    shape?: PointShape;\n    size?: number;\n    color?: string;\n    style?: GraphicStyle;\n  };\n  lineStyle?: LineStyle | ((...args: any[]) => LineStyle);\n  label?: any;\n}\n"]}