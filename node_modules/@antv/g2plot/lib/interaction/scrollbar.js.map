{"version":3,"file":"scrollbar.js","sourceRoot":"","sources":["../../src/interaction/scrollbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { IGroup, Scrollbar } from '../dependents';\nimport BBox from '../util/bbox';\nimport { Scale } from '@antv/scale';\nimport { clamp, get, isEqual, throttle } from '@antv/util';\nimport ViewLayer from '../base/view-layer';\nimport { IScrollbarInteractionConfig } from '../interface/config';\nimport BaseInteraction from './base';\nimport { getDataByScaleRange } from './helper/data-range';\nimport { VIEW_LIFE_CIRCLE } from '@antv/g2/lib/constant';\nimport { VIEW_LAYER_LIFE_CYCLE } from '../base/constants';\n\nconst DEFAULT_PADDING: number = 4;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\nconst SCROLL_BAR_Z_INDEX: number = 999;\n\nconst getValidScrollbarConfig = (cfg: IScrollbarInteractionConfig = {}): Required<IScrollbarInteractionConfig> => {\n  const _cfg: Required<IScrollbarInteractionConfig> = {\n    type: 'horizontal',\n    categorySize: DEFAULT_CATEGORY_SIZE,\n    width: DEFAULT_SIZE,\n    height: DEFAULT_SIZE,\n    padding: [0, 0, 0, 0],\n    ...cfg,\n  };\n\n  // default padding\n  if (!cfg.padding) {\n    _cfg.padding =\n      _cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n  }\n\n  return _cfg;\n};\n\nexport default class ScrollbarInteraction extends BaseInteraction {\n  public static getInteractionRange(layerRange: BBox, interaction: IScrollbarInteractionConfig) {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(interaction);\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding;\n\n    if (config.type === 'horizontal') {\n      return new BBox(\n        layerRange.minX,\n        layerRange.maxY - config.height - paddingTop - paddingBottom,\n        layerRange.width,\n        config.height + paddingTop + paddingBottom\n      );\n    } else {\n      return new BBox(\n        layerRange.maxX - config.width - paddingLeft - paddingRight,\n        layerRange.minY,\n        config.width + paddingLeft + paddingRight,\n        layerRange.height\n      );\n    }\n  }\n\n  private container: IGroup;\n  private scrollbar: Scrollbar;\n  private cnt: number;\n  private step: number;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n  private ratio: number;\n  private thumbOffset: number;\n  private trackLen: number;\n  private thumbLen: number;\n  private onChangeFn = throttle(this.onChange.bind(this), 20, {\n    leading: true,\n  }) as (evt: object) => void;\n\n  public render(): void {\n    const layer = this.getViewLayer();\n    const view = this.view;\n    this.ratio = 0;\n    this.thumbOffset = 0;\n    const callback = () => {\n      const padding = this.view.padding;\n      // if we're not in `auto padding` process\n      if (padding === 'auto' || isEqual(padding, [0, 0, 0, 1])) {\n        return;\n      }\n      if (!this.trackLen) {\n        this.measureScrollBar();\n        this.changeViewData(this.getScrollRange(), true);\n      } else {\n        this.renderScrollbar();\n      }\n    };\n    const changeDataCallback = () => {\n      // reset\n      this.trackLen = 0;\n    };\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback));\n    view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n    this.addDisposable(() => view.off(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback));\n    layer.on(VIEW_LAYER_LIFE_CYCLE.BEFORE_CHANGE_DATA, changeDataCallback);\n    this.addDisposable(() => layer.off(VIEW_LAYER_LIFE_CYCLE.BEFORE_CHANGE_DATA, changeDataCallback));\n  }\n\n  protected start() {\n    return;\n  }\n\n  protected clear(): void {\n    if (this.scrollbar) {\n      this.scrollbar.destroy();\n      this.scrollbar = null;\n    }\n    if (this.container) {\n      this.container.remove(true);\n      this.container = null;\n    }\n    this.trackLen = null;\n    this.thumbLen = null;\n  }\n\n  private renderScrollbar(): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const range = this.getRange();\n    const isHorizontal = config.type !== 'vertical';\n    const panelRange = this.view.coordinateBBox;\n    const [paddingTop, , , paddingLeft] = config.padding;\n    const position = isHorizontal\n      ? { x: panelRange.minX + paddingLeft, y: range.minY + paddingTop }\n      : { x: range.minX + paddingLeft, y: panelRange.minY + paddingTop };\n\n    if (!this.scrollbar) {\n      this.container = this.canvas.addGroup();\n      this.scrollbar = new Scrollbar({\n        container: this.container,\n        x: position.x,\n        y: position.y,\n        isHorizontal,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: this.ratio * this.trackLen,\n      });\n      this.scrollbar.init();\n      this.scrollbar.render();\n      this.scrollbar.get('group').set('zIndex', SCROLL_BAR_Z_INDEX);\n      this.scrollbar.on('scrollchange', this.onChangeFn);\n    } else {\n      this.scrollbar.update({\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: this.thumbOffset,\n        x: position.x,\n        y: position.y,\n      });\n      this.scrollbar.render();\n    }\n  }\n\n  private measureScrollBar(): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = config.padding;\n    const isHorizontal: boolean = config.type !== 'vertical';\n    const panelRange = this.view.coordinateBBox;\n    const xScale: Scale = this.view.getXScale();\n    const yScales: Scale[] = this.view.getYScales().filter((scale) => scale);\n\n    this.cnt = xScale.values.length;\n    this.xScaleCfg = { field: xScale.field, values: xScale.values || [] };\n    this.yScalesCfg = yScales;\n    this.step = Math.floor((isHorizontal ? panelRange.width : panelRange.height) / config.categorySize);\n    this.trackLen = isHorizontal\n      ? panelRange.width - paddingLeft - paddingRight\n      : panelRange.height - paddingTop - paddingBottom;\n    this.thumbLen = Math.max(this.trackLen * clamp(this.step / xScale.values.length, 0, 1), MIN_THUMB_LENGTH);\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step, this.cnt);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const config: Required<IScrollbarInteractionConfig> = getValidScrollbarConfig(this.getInteractionConfig());\n    const viewLayer: ViewLayer = this.getViewLayer();\n    const { meta } = viewLayer.options;\n    const origData: object[] = viewLayer.getData();\n    const newData: object[] = getDataByScaleRange(\n      this.xScaleCfg.field,\n      this.xScaleCfg.values,\n      origData,\n      [startIdx, endIdx],\n      config.type === 'vertical'\n    );\n\n    // ScrollBar在滚动过程中保持\b\bY轴上scale配置: min/max/ticks\n    this.yScalesCfg.forEach((cfg) => {\n      const metaCfg = get(meta, cfg.field) || {};\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        ...metaCfg,\n        type: cfg.type as 'linear' | 'cat' | 'log' | 'pow' | 'identity' | 'time',\n        min: cfg.min,\n        max: cfg.max,\n      });\n    });\n    if (render) {\n      this.view.data(newData);\n      this.view.render();\n    } else {\n      this.view.changeData(newData);\n    }\n  }\n\n  private onChange({ ratio, thumbOffset }: { ratio: number; thumbOffset: number }): void {\n    this.ratio = ratio;\n    this.thumbOffset = thumbOffset;\n\n    const origAnimate = this.view.getOptions().animate;\n    this.view.animate(false);\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(origAnimate);\n    // update scrollbar\n    this.renderScrollbar();\n  }\n}\n"]}