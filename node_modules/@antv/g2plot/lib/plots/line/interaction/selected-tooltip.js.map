{"version":3,"file":"selected-tooltip.js","sourceRoot":"","sources":["../../../../src/plots/line/interaction/selected-tooltip.ts"],"names":[],"mappings":";;;;AAAA,mCAA2C;AAC3C,kDAAqH;AAErH,aAAa;AACb;IAA+C,qDAAiB;IAAhE;;IAUA,CAAC;IATC,sBAAW,2CAAI;aAAf;YACE,OAAO,kBAAkB,CAAC;QAC5B,CAAC;;;OAAA;IAES,iDAAa,GAAvB;QACE,aAAa;QACb,IAAM,GAAG,GAAG,iBAAM,aAAa,WAAE,CAAC;QAClC,6CAAY,GAAG,KAAE,WAAW,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,IAAG;IAC/F,CAAC;IACH,gCAAC;AAAD,CAAC,AAVD,CAA+C,8BAAiB,GAU/D;AAVY,8DAAyB;AAWtC,wCAA2B,CAAC,kBAAkB,EAAE,yBAAyB,CAAC,CAAC;AAE3E;IAA2C,iDAAiB;IAA5D;;IA4CA,CAAC;IAzCQ,oCAAI,GAAX;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,CAAC,cAAO,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACxC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAC/B;IACH,CAAC;IAEM,oCAAI,GAAX;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC/C,UAAU,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAEM,2CAAW,GAAlB,UAAmB,KAAY;QAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC/C,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEO,wCAAQ,GAAhB;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAE9B,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC1D,CAAC;IAEO,6CAAa,GAArB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAM,KAAK,GAAG,WAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC;QAE5C,OAAO,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtF,CAAC;IAEO,uCAAO,GAAf;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEO,oDAAoB,GAA5B;QACE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAsB,CAAC;IAC/E,CAAC;IACH,4BAAC;AAAD,CAAC,AA5CD,CAA2C,8BAAiB,GA4C3D;AA5CY,sDAAqB","sourcesContent":["import { isEqual, last } from '@antv/util';\nimport { InteractionAction, View, TooltipController, Point, registerComponentController } from '../../../dependents';\n\n// @ts-ignore\nexport class SelectedTooltipController extends TooltipController {\n  public get name(): string {\n    return 'selected-tooltip';\n  }\n\n  protected getTooltipCfg() {\n    // @ts-ignore\n    const cfg = super.getTooltipCfg();\n    return { ...cfg, showContent: false, showCrosshairs: true, showMarkers: true, shared: true };\n  }\n}\nregisterComponentController('selected-tooltip', SelectedTooltipController);\n\nexport class SelectedTooltipAction extends InteractionAction {\n  private location: Point;\n\n  public show() {\n    const curLocation = this.getPoint();\n    if (!isEqual(curLocation, this.location)) {\n      this.location = curLocation;\n      this.showTooltip(curLocation);\n    }\n  }\n\n  public hide() {\n    const controller = this.getTooltipController();\n    controller.hideTooltip();\n  }\n\n  public showTooltip(point: Point) {\n    const controller = this.getTooltipController();\n    controller.showTooltip(point);\n  }\n\n  private getPoint() {\n    const ev = this.context.event;\n\n    return ev ? { x: ev.x, y: ev.y } : this.getLastXPoint();\n  }\n\n  private getLastXPoint() {\n    const view = this.getView();\n    const xScale = view.getXScale();\n    const yScale = view.getYScales()[0];\n    const coordinate = view.getCoordinate();\n    const lastX = last(xScale.getTicks()).value;\n\n    return coordinate.convert({ x: lastX, y: (yScale.range[0] + yScale.range[1]) / 2 });\n  }\n\n  private getView(): View {\n    return this.context.view;\n  }\n\n  private getTooltipController() {\n    return this.getView().getController('selected-tooltip') as TooltipController;\n  }\n}\n"]}