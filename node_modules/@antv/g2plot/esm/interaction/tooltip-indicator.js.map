{"version":3,"file":"tooltip-indicator.js","sourceRoot":"","sources":["../../src/interaction/tooltip-indicator.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEqual, last } from '@antv/util';\nimport BaseInteraction from './base';\nimport {\n  IGroup,\n  Element,\n  InteractionAction,\n  GrammarInteraction,\n  registerAction,\n  registerInteraction,\n  VIEW_LIFE_CIRCLE,\n  InteractionUtils,\n} from '../dependents';\nimport TooltipIndicator, { IndicatorItem, EVENTS as TOOLTIP_COMPONENTS_EVENTS } from '../components/tooltip-indicator';\nimport { ITooltipIndicatorInteractionConfig } from '../interface/config';\nimport { forEachElement } from '../util/view';\nimport BBox from '../util/bbox';\n\nconst DEFAULT_PADDING = 8;\n\nconst getValidTooltipIndicatorConfig = (\n  cfg: ITooltipIndicatorInteractionConfig = {}\n): Required<ITooltipIndicatorInteractionConfig> => {\n  const newCfg: Required<ITooltipIndicatorInteractionConfig> = {\n    showTotal: false,\n    showPercent: false,\n    padding: [DEFAULT_PADDING, 24, DEFAULT_PADDING, 24],\n    height: cfg.showPercent ? 72 : 54,\n    ...cfg,\n  };\n\n  return newCfg;\n};\n\nexport enum TOOLTIP_INDICATOR_EVENTS {\n  ACTIVE_ELEMENT = 'tooltip_indicator_active_element',\n  ACTIVE_ELEMENT_BY_X = 'tooltip_indicator_active_element_by_x',\n}\n\n/**\n * Tooltip Indicator Action 实现\n */\nexport class TooltipIndicationAction extends InteractionAction {\n  private state = 'selected';\n  private isSingle = false;\n\n  /** 交互语法触发点 */\n  public active() {\n    const element = InteractionUtils.getCurrentElement(this.context);\n    if (element.hasState('selected')) {\n      if (this.isSingle) {\n        this.setStateByX(element);\n      } else {\n        this.setState(element);\n      }\n    } else {\n      this.setStateByX(element);\n    }\n  }\n\n  /** 单个元素的 enable */\n  public setState(element: Element) {\n    forEachElement(this.getView(), (item) => {\n      if (item === element) {\n        if (!item.hasState(this.state)) {\n          item.setState(this.state, true);\n        }\n      } else {\n        item.setState(this.state, false);\n      }\n    });\n    this.isSingle = true;\n    this.getView().emit(TOOLTIP_INDICATOR_EVENTS.ACTIVE_ELEMENT, { element, isSingle: true });\n  }\n\n  /** 同 X 的元素的 enable */\n  public setStateByX(element: Element) {\n    const xField = this.getXField();\n    const xValue = element.getData()[xField];\n    forEachElement(this.getView(), (item) => {\n      if (item.getData()[xField] === xValue) {\n        if (!item.hasState(this.state)) {\n          item.setState(this.state, true);\n        }\n      } else {\n        item.setState(this.state, false);\n      }\n    });\n    this.isSingle = false;\n    this.getView().emit(TOOLTIP_INDICATOR_EVENTS.ACTIVE_ELEMENT_BY_X, { element, isSingle: false });\n  }\n\n  /** 通过字段值来 enable */\n  public setStateByField(xFieldValue: any, groupFieldValue?: any) {\n    const xField = this.getView().getXScale().field;\n    const groupField = this.getView().getGroupScales()[0].field;\n    forEachElement(this.getView(), (element) => {\n      const data = element.getData();\n      element.setState(\n        this.state,\n        data[xField] === xFieldValue && (groupFieldValue === undefined || data[groupField] === groupFieldValue)\n      );\n    });\n  }\n\n  private getView() {\n    return this.context.view;\n  }\n\n  private getXField() {\n    const { view } = this.context;\n    return view.getXScale().field;\n  }\n}\nregisterAction('tooltip-indicator', TooltipIndicationAction);\n\nregisterInteraction('element-tooltip-indicator', {\n  start: [\n    {\n      trigger: 'element:mousemove',\n      action: 'tooltip-indicator:active',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n    {\n      trigger: 'element:touchmove',\n      action: 'tooltip-indicator:active',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n  ],\n});\n\n/**\n * 组件 Interaction 实现\n */\nexport default class TooltipIndicatorInteraction extends BaseInteraction {\n  public static getInteractionRange(layerRange: BBox, interaction: ITooltipIndicatorInteractionConfig) {\n    const config: Required<ITooltipIndicatorInteractionConfig> = getValidTooltipIndicatorConfig(interaction);\n    const [paddingTop, , paddingBottom] = config.padding;\n\n    return new BBox(layerRange.minX, layerRange.minY, layerRange.width, config.height + paddingTop + paddingBottom);\n  }\n\n  private component: TooltipIndicator;\n  private container: IGroup;\n  private curX: any;\n\n  protected clear(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n    if (this.container) {\n      this.container.remove(true);\n    }\n    this.component = null;\n    this.container = null;\n  }\n\n  public render(): void {\n    const view = this.view;\n    const callback = () => {\n      const xScale = this.view.getXScale();\n      const lastX = last(xScale.getTicks()).tickValue;\n      const padding = this.view.padding;\n      if (!isEqual([0, 0, 0, 0], padding)) {\n        if (this.component) {\n          this.updateComponent();\n        } else {\n          this.createComponent();\n          this.component.on(TOOLTIP_COMPONENTS_EVENTS.ON_SELECT_ITEM, this.onSelectTooltipIndicatorItem);\n        }\n        // 默认选中最后的 X\n        this.curX = lastX;\n        this.component.update({\n          title: { text: xScale.getText(this.curX) },\n        });\n        this.component.render();\n        this.getInteractionAction().setStateByField(lastX);\n      }\n    };\n\n    // 移除冲突/重复的组件和交互\n    view.legend(false);\n    view.removeInteraction('active-region');\n    view.removeInteraction('tooltip');\n    view.interaction('element-tooltip-indicator');\n\n    // 监听 View， 创建/更新组件\n    view.on(VIEW_LIFE_CIRCLE.AFTER_PAINT, callback);\n    view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, callback);\n\n    // 监听组件事件，更新 action\n    view.on(TOOLTIP_INDICATOR_EVENTS.ACTIVE_ELEMENT, this.onElementActive);\n    view.on(TOOLTIP_INDICATOR_EVENTS.ACTIVE_ELEMENT_BY_X, this.onElementActive);\n  }\n\n  private getInteractionAction(): TooltipIndicationAction | undefined {\n    const interaction = this.view.interactions['element-tooltip-indicator'] as GrammarInteraction;\n    return interaction && (interaction.context.getAction('tooltip-indicator') as TooltipIndicationAction);\n  }\n\n  private createComponent() {\n    const { padding } = getValidTooltipIndicatorConfig(this.getInteractionConfig());\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const items = this.getLegendItems();\n    const range = this.getRange();\n    const xScale = this.view.getXScale();\n    const lastX = last(xScale.getTicks()).tickValue;\n    this.container = this.canvas.addGroup();\n    this.component = new TooltipIndicator({\n      container: this.container,\n      x: range.x + paddingLeft,\n      y: range.y + paddingTop,\n      width: range.width - paddingLeft - paddingRight,\n      height: range.height - paddingTop - paddingBottom,\n      theme: this.getViewLayer().getPlotTheme(),\n      items,\n    });\n    this.component.init();\n    this.getInteractionAction().setStateByField(lastX);\n  }\n\n  private updateComponent() {\n    const items = this.getLegendItems();\n    this.component.update({\n      items,\n    });\n  }\n\n  private getLegendItems(xValue?: any): IndicatorItem[] {\n    const { view } = this;\n    const data = view.getData();\n    const defaultColor = view.getTheme().defaultColor;\n    const xScale = view.getXScale();\n    const yScale = view.getYScales()[0];\n    const curX = xValue || last(xScale.getTicks()).tickValue;\n    const groupAttrs = view.getLegendAttributes();\n    const colorAttr = groupAttrs.find((attr) => attr.type === 'color');\n    const items: IndicatorItem[] = [];\n\n    // 取第一个分组scale，暂不考虑多个分组情况\n    const groupScale = view.getGroupScales()[0];\n    const groupField = groupScale.field;\n    if (groupScale && groupScale.isCategory) {\n      // 只处理离散情况\n      groupScale.getTicks().forEach((tick) => {\n        const { text: name, tickValue: value } = tick;\n        const color = colorAttr.mapping(value).join('') || defaultColor;\n        items.push({\n          id: value,\n          title: name,\n          color,\n          values: [],\n        });\n      });\n    }\n\n    const selectedData = data?.filter((datum) => datum[xScale.field] === curX) || [];\n    items.forEach((item) => {\n      const datum = selectedData.find((curDatum) => curDatum[groupField] === item.id);\n      item.values.push({\n        value: yScale.formatter ? yScale.formatter(datum[yScale.field]) : datum[yScale.field],\n      });\n    });\n\n    return items;\n  }\n\n  private onElementActive = ({ element, isSingle }: { element: Element; isSingle: boolean }) => {\n    const xScale = this.view.getXScale();\n    const xField = this.view.getXScale().field;\n    const groupField = this.view.getGroupScales()[0].field;\n    const data = element.getData();\n    const xValue = data[xField];\n    const items = this.getLegendItems(xValue);\n    this.component.update({ items, title: { text: xScale.getText(xValue) } });\n    this.component.render();\n    if (isSingle) {\n      this.component.selectItem(data[groupField]);\n    }\n    this.curX = xValue;\n  };\n\n  private onSelectTooltipIndicatorItem = (itemId?: string) => {\n    if (this.component && itemId) {\n      this.getInteractionAction().setStateByField(this.curX, itemId);\n    }\n  };\n}\n"]}