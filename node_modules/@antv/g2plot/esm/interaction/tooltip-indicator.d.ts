import BaseInteraction from './base';
import { Element, InteractionAction } from '../dependents';
import { ITooltipIndicatorInteractionConfig } from '../interface/config';
import BBox from '../util/bbox';
export declare enum TOOLTIP_INDICATOR_EVENTS {
    ACTIVE_ELEMENT = "tooltip_indicator_active_element",
    ACTIVE_ELEMENT_BY_X = "tooltip_indicator_active_element_by_x"
}
/**
 * Tooltip Indicator Action 实现
 */
export declare class TooltipIndicationAction extends InteractionAction {
    private state;
    private isSingle;
    /** 交互语法触发点 */
    active(): void;
    /** 单个元素的 enable */
    setState(element: Element): void;
    /** 同 X 的元素的 enable */
    setStateByX(element: Element): void;
    /** 通过字段值来 enable */
    setStateByField(xFieldValue: any, groupFieldValue?: any): void;
    private getView;
    private getXField;
}
/**
 * 组件 Interaction 实现
 */
export default class TooltipIndicatorInteraction extends BaseInteraction {
    static getInteractionRange(layerRange: BBox, interaction: ITooltipIndicatorInteractionConfig): BBox;
    private component;
    private container;
    private curX;
    protected clear(): void;
    render(): void;
    private getInteractionAction;
    private createComponent;
    private updateComponent;
    private getLegendItems;
    private onElementActive;
    private onSelectTooltipIndicatorItem;
}
