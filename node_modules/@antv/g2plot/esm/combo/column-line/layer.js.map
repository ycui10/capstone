{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/combo/column-line/layer.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,cAAc,MAAM,SAAS,CAAC;AAErC,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,OAAO,WAAW,MAAM,0BAA0B,CAAC;AAEnD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAGhF,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAiB7C,IAAM,iBAAiB,GAAG;IACxB,KAAK,EAAE,SAAS;IAChB,QAAQ,EAAE,CAAC;IACX,WAAW,EAAE,IAAI;IACjB,KAAK,EAAE;QACL,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE;YACL,MAAM,EAAE,MAAM;SACf;KACF;IACD,KAAK,EAAE;QACL,OAAO,EAAE,KAAK;KACf;CACF,CAAC;AAEF,IAAM,mBAAmB,GAAG;IAC1B,KAAK,EAAE,SAAS;CACjB,CAAC;AAEF,IAAM,kBAAkB,GAAG;IACzB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE,IAAI;IAClB,IAAI,EAAE;QACJ,OAAO,EAAE,IAAI;KACd;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;QACR,OAAO,EAAE,KAAK;KACf;IACD,KAAK,EAAE;QACL,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;KAClB;IACD,KAAK,EAAE;QACL,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,EAAE;KACZ;CACF,CAAC;AAOF;IAAsG,mCAErG;IAFD;QAAA,qEA4UC;QA3TQ,UAAI,GAAW,YAAY,CAAC;QAEzB,aAAO,GAAU,EAAE,CAAC;;IAyThC,CAAC;IAzUe,iCAAiB,GAA/B;QACE,OAAO,OAAO,CAAC,EAAE,EAAE,OAAM,iBAAiB,WAAE,EAAE;YAC5C,KAAK,EAAE;gBACL,UAAU,EAAE,kBAAkB;gBAC9B,WAAW,EAAE,kBAAkB;aAChC;YACD,UAAU,EAAE,iBAAiB;YAC7B,YAAY,EAAE,mBAAmB;YACjC,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAMM,oCAAU,GAAjB;;QACQ,IAAA,KAA8B,IAAI,EAAhC,OAAO,aAAA,EAAE,cAAc,oBAAS,CAAC;QACzC,IAAI,OAAO,CAAC,eAAe,EAAE;YAC3B,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;YAC/C,IAAI,QAAC,cAAc,CAAC,UAAU,0CAAE,QAAQ,CAAA,EAAE;gBACxC,OAAO,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;aACjC;YACD,IAAI,QAAC,cAAc,CAAC,UAAU,0CAAE,KAAK,CAAA,EAAE;gBAC/B,IAAA,KAAwB,cAAc,EAAE,EAAtC,MAAM,YAAA,EAAE,SAAS,eAAqB,CAAC;gBAC/C,IAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBACjD,IAAM,aAAW,GAAG,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC5E,IAAM,aAAW,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,WAAW,EAAE,UAAC,CAAC,EAAE,KAAK;oBACzB,aAAW,CAAC,IAAI,CAAC,aAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,UAAU,CAAC,KAAK,GAAG,aAAW,CAAC;aACxC;SACF;IACH,CAAC;IAEM,8BAAI,GAAX;QACE,iBAAM,IAAI,WAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACrB,OAAO;SACR;QACK,IAAA,KAWF,IAAI,CAAC,OAAO,EAVd,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,MAAM,YAAA,EACN,MAAM,YAAA,EACN,eAAe,qBAAA,EACf,MAAM,YAAA,EACN,UAAU,gBAAA,EACV,YAAY,kBAAA,EACZ,MAAM,YAAA,EACN,UAAU,gBACI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,YAAY,CAAC,KAAe,EAAE,UAAU,CAAC,KAAY,CAAC,CAAC;QACtE,cAAc;QACd,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,WAAW;QACX,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;QACjD,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,aAC9C,MAAM,QAAA,EACN,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EACjB,WAAW,EAAE,eAAe,EAC5B,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EACtD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf,EACD,KAAK,EAAE,OAAO,CACZ,EAAE,EACF;gBACE,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACf;gBACD,IAAI,EAAE,IAAI;aACX,EACD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf,EACD,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf,EACD,MAAM,QAAA,IACH,UAAU,EACb,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAES,oCAAU,GAApB;QAAA,iBAiCC;QAhCO,IAAA,KAAuE,IAAI,CAAC,OAAO,EAAjF,IAAI,UAAA,EAAE,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,YAAY,kBAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAiB,CAAC;QAC1F,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,aAClD,MAAM,QAAA,EACN,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EACjB,IAAI,MAAA;YACJ,KAAK,OAAA,EACL,KAAK,EAAE,OAAO,CACZ,EAAE,EACF;gBACE,IAAI,EAAE;oBACJ,OAAO,EAAE,IAAI;iBACd;gBACD,IAAI,EAAE,IAAI;aACX,EACD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACD,OAAO,EAAE,OAAO,CACd,EAAE,EACF;gBACE,WAAW,EAAE,KAAK;gBAClB,MAAM,EAAE;oBACN,QAAQ,EAAE,UAAC,YAAY,EAAE,EAAE;wBACzB,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;oBACjC,CAAC;iBACF;aACF,EACD,OAAO,CACR,EACD,MAAM,QAAA,IACH,YAAY,EACf,CAAC;QACH,MAAM,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,iCAAO,GAAjB,UAAkB,GAAG,EAAE,EAAE;QAAzB,iBAwDC;QAvDO,IAAA,KAA8B,IAAI,CAAC,OAAO,EAAxC,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,OAAO,aAAiB,CAAC;QACjD,IAAM,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrD,IAAM,SAAS,GAAG,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC5C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,UAAC,CAAC,EAAE,KAAK;gBAChB,IAAA,WAAW,GAAK,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAc,YAAtC,CAAuC;gBAC1D,IAAM,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEtD,oCAAoC;gBACpC,IAAM,IAAI,GAAG,SAAS;oBACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;oBACpD,CAAC,CAAC;wBACE,IAAI,MAAA;wBACJ,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBACpB,CAAC;gBAEN,EAAE,CAAC,KAAK,CAAC,IAAI,yCACR,UAAU,KACb,WAAW,EAAE,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,EACzE,IAAI,EAAE,CAAC,KACJ,IAAI,KACP,KAAK,EAAE,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IACvE,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;YAC/B,IAAM,gBAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAChD,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC7F,qCAAqC;YACrC,IAAI,gBAAc,CAAC,MAAM,KAAK,UAAU,EAAE;gBACxC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBAC3B,OAAO;aACR;iBAAM;gBACL,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;aAC7B;YACD,6CAA6C;YAC7C,IAAM,UAAQ,GAAG,EAAE,CAAC;YACpB,IAAM,WAAS,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,IAAI;gBACV,IAAA,IAAI,GAAK,IAAI,KAAT,CAAU;gBACtB,IAAI,CAAC,QAAQ,CAAC,UAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAc,EAAE,IAAI,CAAC,EAAE;oBAChE,UAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpB,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,IAAI,EAAE,KAAK;gBACzB,IAAI,KAAK,GAAG,WAAS,CAAC,MAAM,EAAE;oBAC5B,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,WAAS,CAAC,KAAK,CAAC,CAAC;iBACpC;qBAAM;oBACL,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAES,sCAAY,GAAtB;QAAA,iBAwBC;QAvBO,IAAA,KAAqB,IAAI,CAAC,OAAO,EAA/B,MAAM,YAAA,EAAE,MAAM,YAAiB,CAAC;QAChC,IAAA,MAAM,GAAK,IAAI,OAAT,CAAU;QACxB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC5C,IAAM,SAAS,GAAG,MAAM,CAAC;QACzB,IAAM,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,IAAI,EAAE,KAAK;YAChC,IAAI,MAAM,CAAC;YACX,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC5C,MAAM,GAAG,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC/F;iBAAM;gBACL,MAAM,GAAG,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aACtG;YACD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,IAAI,EAAE,KAAK;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC5B,KAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC5D;iBAAM;gBACL,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAES,4CAAkB,GAA5B,UAA6B,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS;QAC9D,IAAM,SAAS,GAAG,OAAO,CACvB,EAAE,EACF;YACE,MAAM,QAAA;YACN,KAAK,EAAE;gBACL,CAAC,EAAE,CAAC;gBACJ,IAAI,EAAE,KAAK;aACZ;SACF,EACD,GAAG,CAAC,MAAM,CACX,CAAC;QACF,IAAM,KAAK,GAAG;YACZ;gBACE,IAAI,MAAA;gBACJ,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,SAAS;aAClB;SACF,CAAC;QACF,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;YACjC,EAAE,EAAE,IAAI,CAAC,IAAI;YACb,SAAS,WAAA;YACT,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,KAAK,EAAE,KAAK;YACZ,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,QAAQ,EAAE,GAAG,CAAC,IAAI;SACnB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,4CAAkB,GAA5B,UAA6B,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS;QAChE,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,KAAK;YACpB,WAAW,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,CAAC;gBACP,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE;oBACN,MAAM,QAAA;oBACN,KAAK,EAAE;wBACL,CAAC,EAAE,CAAC;wBACJ,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC;qBACnB;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;YACjC,EAAE,EAAE,IAAI,CAAC,IAAI;YACb,SAAS,WAAA;YACT,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,KAAK,EAAE,WAAW;YAClB,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,QAAQ,EAAE,GAAG,CAAC,IAAI;YAClB,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,8CAAoB,GAA9B,UAA+B,KAAK,EAAE,KAAK;QAA3C,iBAmCC;QAlCC,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnC,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,EAAE;YAC1B,IAAM,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YACzC,IAAM,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;YAClD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,SAAS,KAAK,IAAI,EAAE;oBACtB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,SAAS,GAAG,KAAK,CAAC;iBACnB;gBACD,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,CAAC;oBACxB,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;aAC/C;iBAAM;gBACL,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC7C,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,aAAa,CAAC,MAAM,KAAK,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;oBACpE,iDAAiD;oBACjD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACtB,SAAS,GAAG,IAAI,CAAC;iBAClB;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,CAAC;wBACnB,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,EAAE,CAAC;iBACf;aACF;YACD,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAES,+CAAqB,GAA/B;QACQ,IAAA,KAA4B,IAAI,CAAC,OAAO,EAAtC,eAAe,qBAAA,EAAE,IAAI,UAAiB,CAAC;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,UAAC,CAAC;YACf,IAAM,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBACxB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,sBAAC;AAAD,CAAC,AA5UD,CAAsG,cAAc,GA4UnH;;AAED,gBAAgB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC","sourcesContent":["import { Legend } from '@antv/component';\nimport { registerPlotType } from '../../base/global';\nimport ComboViewLayer from '../base';\nimport { LayerConfig } from '../../base/layer';\nimport LineLayer from '../../plots/line/layer';\nimport ColumnLayer from '../../plots/column/layer';\nimport { IColumnLabel } from '../../plots/column/interface';\nimport { deepMix, clone, each, contains, pull, isArray, get } from '@antv/util';\nimport { ICatAxis, GraphicStyle } from '../../interface/config';\nimport { ComboViewConfig, LineConfig } from '../util/interface';\nimport { getGlobalTheme } from '../../theme';\n\nexport interface ColumnConfig {\n  color?: string | string[]; //兼容groupedColumn和stackedColumn类型\n  columnSize?: number;\n  columnStyle?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  label?: IColumnLabel;\n}\n\nexport interface ColumnLineViewConfig extends ComboViewConfig {\n  xAxis?: ICatAxis;\n  tooltip?: any;\n  lineSeriesField?: string;\n  lineConfig?: LineConfig;\n  columnConfig?: ColumnConfig;\n}\n\nconst defaultLineConfig = {\n  color: '#f5bc32',\n  lineSize: 4,\n  connectNull: true,\n  point: {\n    visible: false,\n    size: 3,\n    shape: 'circle',\n    style: {\n      stroke: '#fff',\n    },\n  },\n  label: {\n    visible: false,\n  },\n};\n\nconst defaultColumnConfig = {\n  color: '#5B8FF9',\n};\n\nconst defaultYAxisConfig = {\n  visible: true,\n  colorMapping: true,\n  grid: {\n    visible: true,\n  },\n  line: {\n    visible: false,\n  },\n  tickLine: {\n    visible: false,\n  },\n  label: {\n    visible: true,\n    autoHide: true,\n    autoRotate: false,\n  },\n  title: {\n    autoRotate: true,\n    visible: false,\n    spacing: 12,\n  },\n};\n\ninterface ColumnLineLayerConfig extends ColumnLineViewConfig, LayerConfig {\n  /** 用户自定义 meta */\n  customMeta?: boolean;\n}\n\nexport default class ColumnLineLayer<T extends ColumnLineLayerConfig = ColumnLineLayerConfig> extends ComboViewLayer<\n  T\n> {\n  public static getDefaultOptions(): Partial<ColumnLineLayerConfig> {\n    return deepMix({}, super.getDefaultOptions(), {\n      yAxis: {\n        leftConfig: defaultYAxisConfig,\n        rightConfig: defaultYAxisConfig,\n      },\n      lineConfig: defaultLineConfig,\n      columnConfig: defaultColumnConfig,\n      legend: {\n        visible: true,\n      },\n    });\n  }\n\n  public type: string = 'columnLine';\n  protected colors: string[];\n  protected legends: any[] = [];\n\n  public beforeInit() {\n    const { options, initialOptions } = this;\n    if (options.lineSeriesField) {\n      options.yAxis.rightConfig.colorMapping = false;\n      if (!initialOptions.lineConfig?.lineSize) {\n        options.lineConfig.lineSize = 3;\n      }\n      if (!initialOptions.lineConfig?.color) {\n        const { colors, colors_20 } = getGlobalTheme();\n        const seriesValue = this.getValueBySeriesField();\n        const colorSeries = seriesValue.length > colors.length ? colors_20 : colors;\n        const colorPlates = [];\n        each(seriesValue, (v, index) => {\n          colorPlates.push(colorSeries[index + 1]);\n        });\n        options.lineConfig.color = colorPlates;\n      }\n    }\n  }\n\n  public init() {\n    super.init();\n    if (!this.checkData()) {\n      return;\n    }\n    const {\n      data,\n      meta,\n      xField,\n      yField,\n      lineSeriesField,\n      legend,\n      lineConfig,\n      columnConfig,\n      events,\n      customMeta,\n    } = this.options;\n    this.colors = [columnConfig.color as string, lineConfig.color as any];\n    // draw column\n    this.drawColumn();\n    //draw line\n    const metaInfo = {};\n    metaInfo[yField[1]] = { ticks: this.getTicks() };\n    const line = this.createLayer(LineLayer, data[1], {\n      xField,\n      yField: yField[1],\n      seriesField: lineSeriesField,\n      meta: !customMeta ? deepMix({}, meta, metaInfo) : meta,\n      xAxis: {\n        visible: false,\n      },\n      yAxis: deepMix(\n        {},\n        {\n          position: 'right',\n          grid: {\n            visible: false,\n          },\n          nice: true,\n        },\n        this.yAxis(1)\n      ),\n      tooltip: {\n        visible: false,\n      },\n      legend: {\n        visible: false,\n      },\n      events,\n      ...lineConfig,\n    });\n    line.render();\n    if (legend.visible) {\n      this.customLegend();\n    }\n    this.adjustLayout();\n  }\n\n  protected drawColumn() {\n    const { data, xField, yField, xAxis, tooltip, columnConfig, meta, events } = this.options;\n    const column = this.createLayer(ColumnLayer, data[0], {\n      xField,\n      yField: yField[0],\n      meta,\n      xAxis,\n      yAxis: deepMix(\n        {},\n        {\n          grid: {\n            visible: true,\n          },\n          nice: true,\n        },\n        this.yAxis(0)\n      ),\n      tooltip: deepMix(\n        {},\n        {\n          showMarkers: false,\n          custom: {\n            onChange: (containerDom, ev) => {\n              this.tooltip(containerDom, ev);\n            },\n          },\n        },\n        tooltip\n      ),\n      events,\n      ...columnConfig,\n    });\n    column.render();\n  }\n\n  protected tooltip(dom, ev) {\n    const { xField, yField, tooltip } = this.options;\n    const originItem = clone(ev.items[0]);\n    const dataItemsA = this.getDataByXField(ev.title, 1);\n    const formatter = get(tooltip, 'formatter');\n    if (dataItemsA) {\n      each(dataItemsA, (d, index) => {\n        const { seriesField } = this.geomLayers[1].options as any;\n        const name = seriesField ? d[seriesField] : yField[1];\n\n        // 如果有 formatter 就执行 formatter，否则不处理\n        const item = formatter\n          ? formatter(d[xField], d[yField[1]], d[seriesField])\n          : {\n              name,\n              value: d[yField[1]],\n            };\n\n        ev.items.push({\n          ...originItem,\n          mappingData: deepMix({}, originItem.mappingData, { _origin: dataItemsA }),\n          data: d,\n          ...item,\n          color: isArray(this.colors[1]) ? this.colors[1][index] : this.colors[1],\n        });\n      });\n    }\n\n    if (this.options.legend.visible) {\n      const unCheckedValue = this.getUnCheckedValue();\n      const totalItems = this.legends[0].get('items').length + this.legends[1].get('items').length;\n      // 如果legend全部是unchecked的状态，tooltip不显示\n      if (unCheckedValue.length === totalItems) {\n        dom.style.display = 'none';\n        return;\n      } else {\n        dom.style.display = 'block';\n      }\n      // legend部分checked的时候，根据checked状态filter items\n      const uniqKeys = [];\n      const uniqItems = [];\n      each(ev.items, (item) => {\n        const { name } = item;\n        if (!contains(uniqKeys, name) && !contains(unCheckedValue, name)) {\n          uniqKeys.push(name);\n          uniqItems.push(item);\n        }\n      });\n      each(ev.items, (item, index) => {\n        if (index < uniqItems.length) {\n          ev.items[index] = uniqItems[index];\n        } else {\n          ev.items.pop();\n        }\n      });\n    }\n  }\n\n  protected customLegend() {\n    const { yField, legend } = this.options;\n    const { colors } = this;\n    const container = this.container.addGroup();\n    const legendCfg = legend;\n    const symbols = ['square', 'circle'];\n    each(this.geomLayers, (geom, index) => {\n      let legend;\n      if (geom.options.seriesField) {\n        const values = this.getValueBySeriesField();\n        legend = this.createNormalLegend(values, symbols[index], colors[index], legendCfg, container);\n      } else {\n        legend = this.createSingleLegend(yField[index], symbols[index], colors[index], legendCfg, container);\n      }\n      this.legends.push(legend);\n    });\n    // 使用legend做图层筛选\n    each(this.geomLayers, (geom, index) => {\n      if (geom.options.seriesField) {\n        this.multipleLegendFilter(index, geom.options.seriesField);\n      } else {\n        this.legendFilter(index);\n      }\n    });\n  }\n\n  protected createSingleLegend(name, symbol, color, cfg, container) {\n    const markerCfg = deepMix(\n      {},\n      {\n        symbol,\n        style: {\n          r: 4,\n          fill: color,\n        },\n      },\n      cfg.marker\n    );\n    const items = [\n      {\n        name,\n        unchecked: false,\n        marker: markerCfg,\n      },\n    ];\n    const legend = new Legend.Category({\n      id: this.type,\n      container,\n      x: 0,\n      y: 0,\n      items: items,\n      updateAutoRender: true,\n      itemBackground: null,\n      itemName: cfg.text,\n    });\n    legend.init();\n    legend.render();\n    return legend;\n  }\n\n  protected createNormalLegend(values, symbol, color, cfg, container) {\n    const legendItems = [];\n    each(values, (v, index) => {\n      legendItems.push({\n        name: v,\n        unchecked: false,\n        marker: {\n          symbol,\n          style: {\n            r: 4,\n            fill: color[index],\n          },\n        },\n      });\n    });\n    const legend = new Legend.Category({\n      id: this.type,\n      container,\n      x: 0,\n      y: 0,\n      items: legendItems,\n      updateAutoRender: true,\n      itemBackground: null,\n      itemName: cfg.text,\n      offsetX: 0,\n    });\n    legend.init();\n    legend.render();\n    return legend;\n  }\n\n  protected multipleLegendFilter(index, field) {\n    const legend = this.legends[index];\n    const filteredValue = [];\n    const legend_group = legend.get('group');\n    let layerHide = false;\n    legend_group.on('click', (ev) => {\n      const view = this.geomLayers[index].view;\n      const item = ev.target.get('delegateObject').item;\n      if (item.unchecked) {\n        if (layerHide === true) {\n          this.showLayer(index);\n          layerHide = false;\n        }\n        pull(filteredValue, item.name);\n        view.filter(item.value, (f) => {\n          return !contains(filteredValue, f);\n        });\n        view.render();\n        legend.setItemState(item, 'unchecked', false);\n      } else {\n        legend.setItemState(item, 'unchecked', true);\n        filteredValue.push(item.name);\n        if (filteredValue.length === this.legends[index].get('items').length) {\n          // 如果分组分类全部被uncheck了，直接隐藏图层，这样仍然可以trigger tooltip\n          this.hideLayer(index);\n          layerHide = true;\n        } else {\n          view.filter(field, (f) => {\n            return !contains(filteredValue, f);\n          });\n          view.render();\n        }\n      }\n      this.canvas.draw();\n    });\n  }\n\n  protected getValueBySeriesField() {\n    const { lineSeriesField, data } = this.options;\n    const lineData = data[1];\n    const values = [];\n    each(lineData, (d) => {\n      const v = d[lineSeriesField];\n      if (!contains(values, v)) {\n        values.push(v);\n      }\n    });\n    return values;\n  }\n}\n\nregisterPlotType('columnLine', ColumnLineLayer);\n"]}