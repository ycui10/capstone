{"version":3,"file":"layer.js","sourceRoot":"","sources":["../../../src/plots/pie/layer.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, every } from '@antv/util';\nimport * as EventParser from './event';\nimport ViewLayer, { ViewConfig } from '../../base/view-layer';\nimport { DataItem, Label, GraphicStyle } from '../../interface/config';\nimport { getGeom } from '../../geoms/factory';\nimport { LayerConfig } from '../../base/layer';\nimport { getPieLabel, PieLabelConfig } from './component/label';\nimport SpiderLabel from './component/label/spider-label';\nimport { registerPlotType } from '../../base/global';\nimport PieBaseLabel from './component/label/base-label';\nimport './theme';\n\nexport const percentageField = '$$percentage$$';\n\nexport interface PieViewConfig extends ViewConfig {\n  angleField: string;\n  colorField?: string;\n  radius?: number;\n  pieStyle?: GraphicStyle | ((...args: any[]) => GraphicStyle);\n  label?: PieLabelConfig;\n}\n\nexport interface PieLayerConfig extends PieViewConfig, LayerConfig {}\n\nconst G2_GEOM_MAP = {\n  pie: 'interval',\n};\n\nconst PLOT_GEOM_MAP = {\n  pie: 'column',\n};\n\n// @ts-ignore\nexport default class PieLayer<T extends PieLayerConfig = PieLayerConfig> extends ViewLayer<T> {\n  public static getDefaultOptions(): any {\n    return deepMix({}, super.getDefaultOptions(), {\n      width: 400,\n      height: 400,\n      title: {\n        visible: false,\n      },\n      description: {\n        visible: false,\n      },\n      forceFit: true,\n      padding: 'auto',\n      radius: 0.8,\n      label: {\n        visible: true,\n        type: 'inner',\n        autoRotate: false,\n        adjustPosition: true,\n        allowOverlap: false,\n        line: {\n          visible: true,\n          smooth: true,\n        },\n      },\n      legend: {\n        visible: true,\n        position: 'right-center',\n      },\n      tooltip: {\n        visible: true,\n        shared: false,\n        showCrosshairs: false,\n        showMarkers: false,\n      },\n      pieStyle: {\n        stroke: 'white',\n        lineWidth: 1,\n      },\n    });\n  }\n\n  public pie: any;\n  public type: string = 'pie';\n  public labelComponent: SpiderLabel | PieBaseLabel;\n\n  public afterInit() {\n    super.afterInit();\n    const { angleField, colorField, data } = this.options;\n    const allZero = every(data, (d) => d[angleField] === 0);\n    if (allZero) {\n      const pieGeom = this.view.geometries[0];\n      pieGeom.tooltip(`${colorField}*${angleField}`);\n    }\n  }\n\n  public afterRender() {\n    super.afterRender();\n    const options = this.options;\n    /** 蜘蛛布局label */\n    if (options.label && options.label.visible) {\n      // 清除，避免二次渲染\n      if (this.labelComponent) {\n        this.labelComponent.clear();\n      }\n      const labelConfig = options.label as Label;\n      if (labelConfig.type === 'spider') {\n        const { data, colorField, angleField } = options;\n        const allZero = every(data, (d) => d[angleField] === 0);\n        const valueField = allZero ? percentageField : angleField;\n        this.labelComponent = new SpiderLabel({\n          view: this.view,\n          fields: colorField ? [valueField, colorField] : [valueField],\n          angleField,\n          allZero,\n          ...this.options.label,\n        });\n        this.labelComponent.render();\n      } else {\n        const LabelCtor = getPieLabel(labelConfig.type);\n        this.labelComponent = new LabelCtor(this, options.label);\n        this.labelComponent.render();\n      }\n    }\n  }\n\n  public getAngleScale() {\n    const { angleField } = this.options;\n    if (angleField) {\n      return this.view.getScaleByField(angleField);\n    }\n  }\n\n  protected geometryParser(dim, type) {\n    if (dim === 'g2') {\n      return G2_GEOM_MAP[type];\n    }\n    return PLOT_GEOM_MAP[type];\n  }\n\n  protected scale() {\n    const props = this.options;\n    super.scale();\n    let scales = {};\n    scales[props.angleField] = {};\n    scales[props.colorField] = { type: 'cat' };\n    scales = deepMix({}, this.config.scales, scales);\n    this.setConfig('scales', scales);\n  }\n\n  protected processData(data?: DataItem[]): DataItem[] | undefined {\n    const key = this.options.angleField;\n    const allZero = every(data, (d) => d[key] === 0);\n    if (allZero) {\n      return data.map((item) => ({\n        ...item,\n        [key]: typeof item[key] === 'string' ? Number.parseFloat(item[key] as 'string') : item[key],\n        [percentageField]: 1 / data.length,\n      }));\n    }\n    return data.map((item) => {\n      const value = item[key];\n\n      return {\n        ...item,\n        // @ts-ignore 如果 value 是数字或者数字字符串： 0, '23', '3.33'，转换为数字\n        // 如果直接 Number.parseFloat(item[key] as 'string') 会出现 NaN，导致浏览器崩溃\n        [key]: value && !isNaN(value) ? +value : value,\n      };\n    });\n  }\n\n  protected axis() {\n    return;\n  }\n\n  protected coord() {\n    const props = this.options;\n    const coordConfig: any = {\n      type: 'theta',\n      cfg: {\n        radius: props.radius,\n        // @ts-ignore 业务定制,不开放配置\n        innerRadius: props.innerRadius || 0,\n      },\n    };\n    this.setConfig('coordinate', coordConfig);\n  }\n\n  protected addGeometry() {\n    const props = this.options;\n    const { data, angleField } = props;\n    let pie;\n    const allZero = every(data, (d) => d[angleField] === 0);\n    if (allZero) {\n      pie = getGeom('interval', 'main', {\n        plot: this,\n        positionFields: [1, percentageField],\n      });\n    } else {\n      pie = getGeom('interval', 'main', {\n        plot: this,\n        positionFields: [1, props.angleField],\n      });\n    }\n    pie.adjust = [{ type: 'stack' }];\n    this.pie = pie;\n    if (props.label) {\n      this.label();\n    }\n    if (props.tooltip && (props.tooltip.fields || props.tooltip.formatter)) {\n      this.geometryTooltip();\n    }\n    this.setConfig('geometry', pie);\n  }\n\n  protected geometryTooltip() {\n    this.pie.tooltip = {};\n    const tooltipOptions: any = this.options.tooltip;\n    if (tooltipOptions.fields) {\n      this.pie.tooltip.fields = tooltipOptions.fields;\n    } else {\n      this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n    }\n    if (tooltipOptions.formatter) {\n      this.pie.tooltip.callback = tooltipOptions.formatter;\n      if (!tooltipOptions.fields) {\n        this.pie.tooltip.fields = [this.options.angleField, this.options.colorField];\n      }\n    }\n  }\n\n  protected animation() {\n    super.animation();\n    const props = this.options;\n    if (props.animation === false) {\n      /** 关闭动画 */\n      this.pie.animate = false;\n    }\n  }\n\n  protected annotation() {\n    return;\n  }\n\n  protected parseEvents(eventParser?) {\n    if (eventParser) {\n      super.parseEvents(eventParser);\n    } else {\n      super.parseEvents(EventParser);\n    }\n  }\n\n  private label() {\n    // 不使用 g2 内置label\n    this.pie.label = false;\n  }\n}\n\nregisterPlotType('pie', PieLayer);\n"]}