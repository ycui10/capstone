import { Point, TooltipOption } from '../../interface';
import { Controller } from './base';
/** @ignore */
export default class Tooltip extends Controller<TooltipOption> {
    private tooltip;
    private tooltipMarkersGroup;
    private tooltipCrosshairsGroup;
    private xCrosshair;
    private yCrosshair;
    private guideGroup;
    private isLocked;
    private items;
    private title;
    private point;
    get name(): string;
    init(): void;
    private isVisible;
    render(): void;
    /**
     * Shows tooltip
     * @param point
     */
    showTooltip(point: Point): void;
    hideTooltip(): void;
    /**
     * lockTooltip
     */
    lockTooltip(): void;
    /**
     * unlockTooltip
     */
    unlockTooltip(): void;
    /**
     * isTooltipLocked
     */
    isTooltipLocked(): boolean;
    clear(): void;
    destroy(): void;
    changeVisible(visible: boolean): void;
    getTooltipItems(point: Point): any[];
    layout(): void;
    update(): void;
    protected getTooltipCfg(): any;
    private getTitle;
    private renderTooltip;
    private renderTooltipMarkers;
    private renderCrosshairs;
    private renderXCrosshairs;
    private renderYCrosshairs;
    private getCrosshairsText;
    private getGuideGroup;
    private getTooltipMarkersGroup;
    private getTooltipCrosshairsGroup;
    private getTooltipItemsByHitShape;
    private getTooltipItemsByFindData;
    private findItemsFromView;
    private getViewWithGeometry;
}
