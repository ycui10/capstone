{"version":3,"file":"outer.js","sourceRoot":"","sources":["../../../../../src/geometry/label/layout/pie/outer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { BBox, IGroup, IShape, IElement } from '@antv/g-base';\nimport { isObject, each, find, get } from '@antv/util';\nimport { Point } from '../../../../interface';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { LabelItem } from '../../interface';\n\n/** label text和line距离 4px */\nconst MARGIN = 4;\n\nfunction antiCollision(\n  labelShapes: IGroup[],\n  labels: LabelItem[],\n  labelHeight: number,\n  plotRange,\n  center: Point,\n  radius: number,\n  isRight\n) {\n  // sorted by y, mutable\n  labels.sort((a, b) => a.y - b.y);\n\n  // adjust y position of labels to avoid overlapping\n  const start = plotRange.start;\n  const end = plotRange.end;\n  const startY = Math.min(start.y, end.y);\n  const endY = Math.max(start.y, end.y);\n  let i;\n\n  const boxes = labels.map((label) => {\n    return {\n      content: label.content,\n      size: labelHeight,\n      pos: label.y,\n      targets: [label.y],\n    };\n  });\n\n  const maxPos = Math.max(...boxes.map((b) => b.pos));\n  const minPos = Math.min(...boxes.map((b) => b.pos));\n  /**\n   * when in right, shift from up to down\n   */\n  if (isRight) {\n    const minY = Math.min(minPos, endY - (boxes.length - 1) * labelHeight);\n    const maxY = Math.max(minY + boxes.length * labelHeight, maxPos + labelHeight);\n    let overlapping = true;\n    while (overlapping) {\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          // overlap\n          if (previousBox.pos + previousBox.size > box.pos) {\n            if (box.pos + i * labelHeight < maxY) {\n              // join boxes\n              previousBox.size += box.size;\n              previousBox.targets = previousBox.targets.concat(box.targets);\n              // removing box\n              boxes.splice(i, 1);\n            } else {\n              previousBox.pos = box.pos - previousBox.size;\n            }\n            overlapping = true;\n          }\n        }\n      }\n    }\n  } else {\n    const maxY = Math.max(startY + (boxes.length - 1) * labelHeight, maxPos);\n    const minY = Math.min(minPos, maxY - (boxes.length - 1) * labelHeight);\n    let overlapping = true;\n    while (overlapping) {\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          // overlap\n          if (previousBox.pos + previousBox.size > box.pos) {\n            if (previousBox.pos - minY > i * labelHeight) {\n              previousBox.pos -= previousBox.size;\n            } else {\n              // join boxes\n              previousBox.size += box.size;\n              previousBox.targets = previousBox.targets.concat(box.targets);\n              // removing box\n              boxes.splice(i, 1);\n            }\n            overlapping = true;\n          }\n        }\n      }\n    }\n  }\n\n  // step 4: normalize y and adjust x\n  i = 0;\n  boxes.forEach((b) => {\n    let posInCompositeBox = b.pos;\n    b.targets.forEach(() => {\n      labels[i].y = posInCompositeBox;\n      posInCompositeBox += labelHeight;\n      i++;\n    });\n  });\n\n  const labelsMap = {};\n  for (const labelShape of labelShapes) {\n    labelsMap[labelShape.get('id')] = labelShape;\n  }\n\n  // (x - cx)^2 + (y - cy)^2 = totalR^2\n  let totalR = (Math.max(...labels.map((l) => l.y)) - Math.min(...labels.map((l) => l.y))) / 2;\n  totalR = Math.max(totalR, radius);\n  labels.forEach((label) => {\n    const labelShape = labelsMap[label.id];\n\n    // because group could not effect text-shape, should set text-shape position manually\n    const textShape = labelShape.find((child) => child.get('type') === 'text') as IElement;\n\n    // textShape 发生过调整\n    if (textShape && textShape.attr('y') !== label.y) {\n      const rPow2 = totalR * totalR;\n      const dyPow2 = Math.pow(Math.abs(label.y - center.y), 2);\n      if (rPow2 < dyPow2) {\n        label.x = center.x;\n      } else {\n        const dx = Math.sqrt(rPow2 - dyPow2);\n        if (!isRight) {\n          // left\n          label.x = center.x - dx;\n        } else {\n          // right\n          label.x = center.x + dx;\n        }\n      }\n    }\n\n    // adjust labelShape\n    labelShape.attr('x', label.x);\n    labelShape.attr('y', label.y);\n\n    // @ts-ignore\n    if (textShape) {\n      textShape.attr('y', label.y);\n      textShape.attr('x', label.x);\n    }\n  });\n}\n\nexport function pieOuterLabelLayout(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  const offset = items[0] ? items[0].offset : 0;\n  const coordinate: Coordinate = labels[0].get('coordinate');\n  const radius = coordinate.getRadius();\n  const center = coordinate.getCenter();\n\n  if (offset > 0) {\n    // note labelHeight 可以控制 label 的行高\n    const lineHeight: number = get(items[0], 'labelHeight', 14);\n    const totalR = radius + offset;\n    const totalHeight = totalR * 2 + lineHeight * 2;\n    const plotRange = {\n      start: coordinate.start,\n      end: coordinate.end,\n    };\n\n    // step 1: separate labels\n    const halves: LabelItem[][] = [\n      [], // left\n      [], // right\n    ];\n    items.forEach((labelItem) => {\n      if (!labelItem) {\n        return;\n      }\n      if (labelItem.x < center.x) {\n        // left\n        halves[0].push(labelItem);\n      } else {\n        // right or center will be put on the right side\n        halves[1].push(labelItem);\n      }\n    });\n\n    halves.forEach((half, index) => {\n      // step 2: reduce labels\n      const maxLabelsCountForOneSide = totalHeight / lineHeight;\n      if (half.length > maxLabelsCountForOneSide) {\n        half.sort((a, b) => {\n          // sort by percentage DESC\n          // fixme-xinming 目前还获取不到，需要使用 scale 去获取 percent\n          return b['data.percent'] - a['data.percent'];\n        });\n\n        const hidden = half.splice(maxLabelsCountForOneSide, half.length - maxLabelsCountForOneSide + 1);\n        hidden.forEach((l) => {\n          const idx = labels.findIndex((item) => item.get('id') === l.id);\n          if (labels[idx]) {\n            labels[idx].remove(true);\n            // 同时移除\n            labels.splice(idx, 1);\n          }\n        });\n      }\n      antiCollision(labels, half, lineHeight, plotRange, center, totalR, index === 1);\n    });\n  }\n\n  // 配置 labelLine\n  each(items, (item) => {\n    if (item && item.labelLine) {\n      const { angle } = item;\n      // 贴近圆周\n      const startPoint = polarToCartesian(center.x, center.y, radius, angle);\n      const itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n      const itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n\n      const endPoint = {\n        x: itemX - Math.cos(angle) * MARGIN,\n        y: itemY - Math.sin(angle) * MARGIN,\n      };\n\n      const smoothConnector = item.labelLine.smooth;\n      const path = [];\n      const dx = endPoint.x - center.x;\n      const dy = endPoint.y - center.y;\n      let endAngle = Math.atan(dy / dx);\n      // 第三象限 & 第四象限\n      if (dx < 0) {\n        endAngle += Math.PI;\n      }\n\n      // 默认 smooth, undefined 也为 smooth\n      if (smoothConnector === false) {\n        if (!isObject(item.labelLine)) {\n          // labelLine: true\n          item.labelLine = {};\n        }\n\n        // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n        let sweepFlag = 0;\n\n        // 第一象限\n        if ((angle < 0 && angle > -Math.PI / 2) || angle > Math.PI * 1.5) {\n          if (endPoint.y > startPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第二象限\n        if (angle >= 0 && angle < Math.PI / 2) {\n          if (endPoint.y > startPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第三象限\n        if (angle >= Math.PI / 2 && angle < Math.PI) {\n          if (startPoint.y > endPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第四象限\n        if (angle < -Math.PI / 2 || (angle >= Math.PI && angle < Math.PI * 1.5)) {\n          if (startPoint.y > endPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        const distance = offset / 2 > 4 ? 4 : Math.max(offset / 2 - 1, 0);\n        const breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle);\n        // 圆弧的结束点\n        const breakPoint3 = polarToCartesian(center.x, center.y, radius + offset / 2, endAngle);\n\n        /**\n         * @example\n         * M 100 100 L100 90 A 50 50 0 0 0 150 50\n         * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n         * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n         * 第 5 个参数: 是否顺时针绘制\n         */\n        // 默认小弧\n        const largeArcFlag = 0;\n        // step1: 移动至起点\n        path.push(`M ${startPoint.x} ${startPoint.y}`);\n        // step2: 连接拐点\n        path.push(`L ${breakPoint.x} ${breakPoint.y}`);\n        // step3: 绘制圆弧 至 结束点\n        path.push(`A ${center.x} ${center.y} 0 ${largeArcFlag} ${sweepFlag} ${breakPoint3.x} ${breakPoint3.y}`);\n        // step4: 连接结束点\n        path.push(`L ${endPoint.x} ${endPoint.y}`);\n      } else {\n        const breakPoint = polarToCartesian(\n          center.x,\n          center.y,\n          radius + (offset / 2 > 4 ? 4 : Math.max(offset / 2 - 1, 0)),\n          angle\n        );\n        // G2 旧的拉线\n        // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n        const xSign = startPoint.x < center.x ? 1 : -1;\n        // step1: 连接结束点\n        path.push(`M ${endPoint.x} ${endPoint.y}`);\n        const slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n        const slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n        if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n          // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n          path.push(\n            ...[\n              'C',\n              endPoint.x + xSign * 4,\n              endPoint.y,\n              2 * breakPoint.x - startPoint.x,\n              2 * breakPoint.y - startPoint.y,\n              startPoint.x,\n              startPoint.y,\n            ]\n          );\n        }\n        // step3: 连接至起点\n        path.push(`L ${startPoint.x} ${startPoint.y}`);\n      }\n\n      item.labelLine.path = path.join(' ');\n    }\n  });\n}\n"]}