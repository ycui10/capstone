"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var padding_1 = require("../../util/padding");
var auto_1 = require("./auto");
/**
 * @ignore
 * G2 默认提供的 layout 函数
 * 内置布局函数处理的逻辑：
 *
 * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组
 * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值
 * 3. 移动组件位置
 *
 * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。
 * @param view
 */
function defaultLayout(view) {
    var axis = view.getController('axis');
    var legend = view.getController('legend');
    var annotation = view.getController('annotation');
    var slider = view.getController('slider');
    // 1. 自动加 auto padding -> absolute padding
    var padding = auto_1.calculatePadding(view);
    // 2. 计算出新的 coordinateBBox
    view.coordinateBBox = view.viewBBox.shrink(padding).shrink(padding_1.parsePadding(view.appendPadding));
    view.adjustCoordinate();
    // 3. 根据最新的 coordinate 重新布局组件
    [axis, slider, legend, annotation].forEach(function (controller) {
        if (controller) {
            controller.layout();
        }
    });
}
exports.default = defaultLayout;
//# sourceMappingURL=index.js.map